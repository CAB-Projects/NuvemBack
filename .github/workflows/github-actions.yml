name: Docker Hub Push

on:
  push:
    branches:
      - main
    paths:
      - 'NuvemBack/**'
      - 'pasta/**'
      - 'docker-compose.yml'

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      backend: ${{ steps.filter.outputs.backend }}
      mysql: ${{ steps.filter.outputs.mysql }}
    steps:
      - uses: actions/checkout@v2
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            backend:
              - 'NuvemBack/**'
            mysql:
              - 'pasta/**'

  build-and-push:
    needs: changes
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Criar Dockerfile temporário para o backend
      - name: Create Backend Dockerfile
        if: needs.changes.outputs.backend == 'true'
        run: |
          cat > ./NuvemBack/Dockerfile << 'EOF'
          FROM node:21
          WORKDIR /usr/src/app
          COPY package*.json ./
          RUN npm install
          COPY . .
          EXPOSE 8000
          CMD ["cd", "NuvemBack"]
          CMD ["npm", "start"]
          EOF

      # Criar Dockerfile temporário para o MySQL
      - name: Create MySQL Dockerfile
        if: needs.changes.outputs.mysql == 'true'
        run: |
          cat > ./pasta/Dockerfile << 'EOF'
          FROM mysql:8.0
          COPY ./*.sql /docker-entrypoint-initdb.d/
          EOF

      # Build e Push da imagem do backend
      - name: Build and push backend image
        if: needs.changes.outputs.backend == 'true'
        uses: docker/build-push-action@v2
        with:
          context: ./NuvemBack
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/nuvemback:latest

      # Build e Push da imagem do MySQL
      - name: Build and push mysql image
        if: needs.changes.outputs.mysql == 'true'
        uses: docker/build-push-action@v2
        with:
          context: ./pasta
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/mysql-restaurantes:latest